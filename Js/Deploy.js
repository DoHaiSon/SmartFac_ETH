const Web3 = require('web3');
const fs = require('fs');
const solc = require('solc');
const path = require('path');

const web3 = new Web3(new Web3.providers.HttpProvider("http://172.17.0.2:8545"));

ABI = [{"inputs":[{"internalType":"address","name":"_add","type":"address"}],"name":"add_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"_id","type":"int256"},{"internalType":"uint256","name":"_time","type":"uint256"},{"internalType":"string","name":"_data","type":"string"}],"name":"new_Reco","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_rm","type":"address"}],"name":"remove_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"id","type":"int256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"},{"indexed":false,"internalType":"string","name":"data","type":"string"}],"name":"added","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reco","outputs":[{"internalType":"int256","name":"id","type":"int256"},{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_account","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_of_reco","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}];
bytecode = "60806040526000600255600060035534801561001a57600080fd5b50604051610cf9380380610cf98339818101604052602081101561003d57600080fd5b810190808051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b50604052505050600081511161016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4d697373696e67206e616d652e0000000000000000000000000000000000000081525060200191505060405180910390fd5b8060009080519060200190610185929190610235565b506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036000815460010191905081905550506102da565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061027657805160ff19168380011785556102a4565b828001600101855582156102a4579182015b828111156102a3578251825591602001919060010190610288565b5b5090506102b191906102b5565b5090565b6102d791905b808211156102d35760008160009055506001016102bb565b5090565b90565b610a10806102e96000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806303a34b0d1461006757806306c06430146100ab57806311db785a14610160578063c8abe2be1461017e578063d375d6681461024d578063f4719ad91461026b575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102af565b005b6100d7600480360360208110156100c157600080fd5b810190808035906020019092919050505061049d565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610123578082015181840152602081019050610108565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61016861055f565b6040518082815260200191505060405180910390f35b61024b6004803603606081101561019457600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156101c557600080fd5b8201836020820111156101d757600080fd5b803590602001918460018302840111640100000000831117156101f957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610565565b005b61025561072c565b6040518082815260200191505060405180910390f35b6102ad6004803603602081101561028157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610732565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610432576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5468697320616464726573732077617320657869737465642e0000000000000081525060200191505060405180910390fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003600081546001019190508190555050565b6004602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b5050505050905083565b60035481565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806109ba6021913960400191505060405180910390fd5b6002600081546001019190508190555060405180606001604052808481526020018381526020018281525060046000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002019080519060200190610677929190610914565b509050507fc8f180bceb079957e1541bd0298db0493ae41c075cbc8b9da535f4d330e76e768383836040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106eb5780820151818401526020810190506106d0565b50505050905090810190601f1680156107185780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e6e6f742072656d6f766520696e6974204163636f756e742e000000000081525060200191505060405180910390fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061095557805160ff1916838001178555610983565b82800160010185558215610983579182015b82811115610982578251825591602001919060010190610967565b5b5090506109909190610994565b5090565b6109b691905b808211156109b257600081600090555060010161099a565b5090565b9056fe546869732061646472657373206e6f7420696e2074727573746564206c6973742ea2646970667358221220c18b103bc86d78377c8d729b8c3c972d5ca75766a7102ce552471ae992b280cb64736f6c63430006010033";

const account = '0x9c8e8c7847e2268482781ae3ed767d6984d63411'; 
const privKey = 'c2dd6b39ade1ed7abc1a57a6e6e3cb2e2d758f6e7a0f2d711573985f25dced98';

// Unlock the coinbase account to make transactions out of it
console.log("Unlocking coinbase account");
var password = "123456";
try {
  web3.eth.personal.unlockAccount(account, password);
} catch(e) {
  console.log(e);
  return;
}

async function deploy_contract() {
	const myContract = new web3.eth.Contract(ABI)
	let options = {
		arguments: ["SmartFac"],
		data: bytecode
	}
	var gasEstimate = 860844;
	// var gasEstimate = await myContract.deploy(options).estimateGas();
	// console.log(gas)
	await myContract.deploy(options)
	.send({
		from: account,
		gas: web3.utils.toHex(gasEstimate),
		gasPrice: web3.utils.toHex(web3.utils.toWei('1','gwei'))
	}, function(error, transactionHash){ console.log("Transaction Hash: ",transactionHash) })
	.on('error', function(error){ console.log(error) })
	.on('receipt', function(receipt){
	   console.log(receipt.contractAddress) // contains the new contract address
	})
    process.exit()
}

deploy_contract()
