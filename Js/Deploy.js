const Web3 = require('web3');

const web3 = new Web3(new Web3.providers.HttpProvider("http://127.17.0.2:8545"));

const ABI = [[{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"id","type":"int256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"},{"indexed":false,"internalType":"string","name":"data","type":"string"}],"name":"added","type":"event"},{"inputs":[],"name":"Fac_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_add","type":"address"}],"name":"add_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"_id","type":"int256"},{"internalType":"uint256","name":"_time","type":"uint256"},{"internalType":"string","name":"_data","type":"string"}],"name":"new_Reco","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"print_trusted_acc","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reco","outputs":[{"internalType":"int256","name":"id","type":"int256"},{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_add","type":"address"}],"name":"remove_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"total_account","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_of_reco","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"trusted_acc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]]

const bytecode = "6080604052600060015560006002553480156200001b57600080fd5b506040516200132638038062001326833981810160405260208110156200004157600080fd5b81019080805160405193929190846401000000008211156200006257600080fd5b838201915060208201858111156200007957600080fd5b82518660018202830111640100000000821117156200009757600080fd5b8083526020830192505050908051906020019080838360005b83811015620000cd578082015181840152602081019050620000b0565b50505050905090810190601f168015620000fb5780820380516001836020036101000a031916815260200191505b5060405250505060008151116200017a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4d697373696e67206e616d652e0000000000000000000000000000000000000081525060200191505060405180910390fd5b806000908051906020019062000192929190620001fe565b503360046000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600081546001019190508190555050620002ad565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024157805160ff191683800117855562000272565b8280016001018555821562000272579182015b828111156200027157825182559160200191906001019062000254565b5b50905062000281919062000285565b5090565b620002aa91905b80821115620002a65760008160009055506001016200028c565b5090565b90565b61106980620002bd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a1aa026e11610066578063a1aa026e14610232578063c8abe2be146102a0578063d375d6681461036f578063f4719ad91461038d578063f67c85cc146103d157610093565b806303a34b0d1461009857806306c06430146100dc57806311d274551461019157806311db785a14610214575b600080fd5b6100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610430565b005b610108600480360360208110156100f257600080fd5b810190808035906020019092919050505061065e565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610154578082015181840152602081019050610139565b50505050905090810190601f1680156101815780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610199610720565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d95780820151818401526020810190506101be565b50505050905090810190601f1680156102065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021c6107c2565b6040518082815260200191505060405180910390f35b61025e6004803603602081101561024857600080fd5b81019080803590602001909291905050506107c8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036d600480360360608110156102b657600080fd5b810190808035906020019092919080359060200190929190803590602001906401000000008111156102e757600080fd5b8201836020820111156102f957600080fd5b8035906020019184600183028401116401000000008311171561031b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107fb565b005b610377610a0d565b6040518082815260200191505060405180910390f35b6103cf600480360360208110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a13565b005b6103d9610da1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561041c578082015181840152602081019050610401565b505050509050019250505060405180910390f35b6004600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b60008090505b6002548110156105f6578173ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5468697320616464726573732077617320657869737465642e0000000000000081525060200191505060405180910390fd5b808060010191505061050a565b508060046000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600081546001019190508190555050565b6003602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107165780601f106106eb57610100808354040283529160200191610716565b820191906000526020600020905b8154815290600101906020018083116106f957829003601f168201915b5050505050905083565b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107b85780601f1061078d576101008083540402835291602001916107b8565b820191906000526020600020905b81548152906001019060200180831161079b57829003601f168201915b5050505050905090565b60025481565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080905060008090505b600254811015610889573373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561087c57600191505b8080600101915050610806565b5060011515811515146108e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610ff26021913960400191505060405180910390fd5b6001600081546001019190508190555060405180606001604052808581526020018481526020018381525060036000600154815260200190815260200160002060008201518160000155602082015181600101556040820151816002019080519060200190610957929190610f4c565b509050507fc8f180bceb079957e1541bd0298db0493ae41c075cbc8b9da535f4d330e76e768484846040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109cb5780820151818401526020810190506109b0565b50505050905090810190601f1680156109f85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b60015481565b6004600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166004600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e6e6f742072656d6f766520696e6974204163636f756e742e000000000081525060200191505060405180910390fd5b600080905060008090505b600254811015610d3f578273ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d325760008190505b600160025403821015610ce0576004600060018301815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508180600101925050610c3e565b5060046000600160025403815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600260008282540392505081905550600191505b8080600101915050610bc7565b506001151581151514610d9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806110136021913960400191505060405180910390fd5b5050565b60606004600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b6060600254604051908082528060200260200182016040528015610eaa5781602001602082028038833980820191505090505b50905060008090505b600254811015610f44576004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110610efd57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610eb3565b508091505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f8d57805160ff1916838001178555610fbb565b82800160010185558215610fbb579182015b82811115610fba578251825591602001919060010190610f9f565b5b509050610fc89190610fcc565b5090565b610fee91905b80821115610fea576000816000905550600101610fd2565b5090565b9056fe546869732061646472657373206e6f7420696e2074727573746564206c6973742e546869732061646472657373206e6f74206578697374656420696e206c6973742ea2646970667358221220d794560e41d4be2381442a93601b79b933ca2df0b12af52fd540040c60318ad064736f6c63430006010033"

const account = '0x9c8e8c7847e2268482781ae3ed767d6984d63411'; 
const privKey = 'c2dd6b39ade1ed7abc1a57a6e6e3cb2e2d758f6e7a0f2d711573985f25dced98';

// Unlock the coinbase account to make transactions out of it
console.log("Unlocking coinbase account");
var password = "123456";
try {
  web3.eth.personal.unlockAccount(account, password);
} catch(e) {
  console.log(e);
  return;
}

async function deploy_contract() {
    const myContract = new web3.eth.Contract(ABI)
    gas = await web3.eth.getBlock("latest");

	await myContract.deploy({
		data: bytecode,
		arguments: ['SmartFac']
	})
	.send({
		from: account,
		gas: gas.gasLimit,
		gasLimit: gas.gasLimit,
		gasPrice: web3.utils.toHex(web3.utils.toWei('1','gwei'))
	}, function(error, transactionHash){ console.log(transactionHash) })
	.on('error', function(error){ console.log(error) })
	.on('receipt', function(receipt){
	   console.log(receipt.contractAddress) // contains the new contract address
	})
	.then(function(newContractInstance){
		console.log(newContractInstance.options.address) // instance with the new contract address
	});
    process.exit()
}

deploy_contract()
