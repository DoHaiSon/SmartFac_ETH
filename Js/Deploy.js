const Web3 = require('../Web_client/node_modules/web3');

const web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:8545"));

ABI = [{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"},{"indexed":false,"internalType":"string","name":"data","type":"string"}],"name":"added","type":"event"},{"inputs":[],"name":"Fac_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_add","type":"address"}],"name":"add_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_time","type":"uint256"},{"internalType":"string","name":"_data","type":"string"}],"name":"new_Reco","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reco","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rm","type":"address"}],"name":"remove_acc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"total_of_reco","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]

bytecode = "6080604052600060025534801561001557600080fd5b50604051610d0c380380610d0c8339818101604052602081101561003857600080fd5b810190808051604051939291908464010000000082111561005857600080fd5b8382019150602082018581111561006e57600080fd5b825186600182028301116401000000008211171561008b57600080fd5b8083526020830192505050908051906020019080838360005b838110156100bf5780820151818401526020810190506100a4565b50505050905090810190601f1680156100ec5780820380516001836020036101000a031916815260200191505b50604052505050600081511161016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4d697373696e67206e616d652e0000000000000000000000000000000000000081525060200191505060405180910390fd5b8060009080519060200190610180929190610220565b506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061026157805160ff191683800117855561028f565b8280016001018555821561028f579182015b8281111561028e578251825591602001919060010190610273565b5b50905061029c91906102a0565b5090565b6102c291905b808211156102be5760008160009055506001016102a6565b5090565b90565b610a38806102d46000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806303a34b0d1461006757806306c06430146100ab57806311d27455146101605780636a753ab2146101e3578063d375d668146102b2578063f4719ad9146102d0575b600080fd5b6100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610314565b005b6100d7600480360360208110156100c157600080fd5b8101908080359060200190929190505050610432565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610123578082015181840152602081019050610108565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101686104f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101a857808201518184015260208101905061018d565b50505050905090810190601f1680156101d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b0600480360360608110156101f957600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561022a57600080fd5b82018360208201111561023c57600080fd5b8035906020019184600183028401116401000000008311171561025e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610596565b005b6102ba61075d565b6040518082815260200191505060405180910390f35b610312600480360360208110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610763565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6003602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905083565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b5050505050905090565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610638576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806109e26021913960400191505060405180910390fd5b60026000815460010191905081905550604051806060016040528084815260200183815260200182815250600360006002548152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906106a892919061093c565b509050507f863e218a2405538d4bab1c86f38d87b75a66dfddbadd340de5f5994b7dde25c68383836040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561071c578082015181840152602081019050610701565b50505050905090810190601f1680156107495780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610826576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f506c6573652075736520696e697420636f6e7472616374204163636f756e742e81525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f43616e6e6f742072656d6f766520696e6974204163636f756e742e000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061097d57805160ff19168380011785556109ab565b828001600101855582156109ab579182015b828111156109aa57825182559160200191906001019061098f565b5b5090506109b891906109bc565b5090565b6109de91905b808211156109da5760008160009055506001016109c2565b5090565b9056fe546869732061646472657373206e6f7420696e2074727573746564206c6973742ea2646970667358221220c99a30a50ea18d3f8be7f943950734d01ec2f4ace81802e81f68ee7755d00bdb64736f6c63430006000033"

const account = '0x9c8e8c7847e2268482781ae3ed767d6984d63411'; 
const privKey = 'c2dd6b39ade1ed7abc1a57a6e6e3cb2e2d758f6e7a0f2d711573985f25dced98';

// Unlock the coinbase account to make transactions out of it
console.log("Unlocking coinbase account");
var password = "123456";
try {
  web3.eth.personal.unlockAccount(account, password);
} catch(e) {
  console.log(e);
  return;
}

async function deploy_contract() {
	const myContract = new web3.eth.Contract(ABI)
	let options = {
		arguments: ["SmartFac"],
		data: bytecode
	}
	var gasEstimate = 9e6;
	// var gasEstimate = await myContract.deploy(options).estimateGas();
	// console.log(gas)
	await myContract.deploy(options)
	.send({
		from: account,
		gas: web3.utils.toHex(gasEstimate),
		gasPrice: web3.utils.toHex(web3.utils.toWei('1','gwei'))
	}, function(error, transactionHash){ console.log("Transaction Hash: ",transactionHash) })
	.on('error', function(error){ console.log(error) })
	.on('receipt', function(receipt){
	   console.log(receipt.contractAddress) // contains the new contract address
	})
    process.exit()
}

deploy_contract()
