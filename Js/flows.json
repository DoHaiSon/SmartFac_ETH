[
    {
        "id": "20a22429.5f7e9c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "32cabe4.7f0c842",
        "type": "debug",
        "z": "20a22429.5f7e9c",
        "name": "Deploy",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "b13f9a63.11c3b8",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "Deploy smart contract",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "data",
                "v": "Smart_Fac",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "617bd325.6c031c"
            ]
        ]
    },
    {
        "id": "c9b39d3.f42226",
        "type": "mqtt in",
        "z": "20a22429.5f7e9c",
        "name": "",
        "topic": "Cyberattack",
        "qos": "2",
        "datatype": "auto",
        "broker": "f91b70f6.86f12",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "2991e45b.0f37bc"
            ]
        ]
    },
    {
        "id": "677f2da.426fdd4",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": "timeout 5s /home/iot-nexcom/CIB/Shared/kdd99extractor  >/home/iot-nexcom/CIB/datasets/our_kdd_99/data_raw.csv",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "1",
        "oldrc": false,
        "name": "kdd99extractor",
        "x": 360,
        "y": 660,
        "wires": [
            [
                "e44540db.8ec0e"
            ],
            [],
            []
        ]
    },
    {
        "id": "2991e45b.0f37bc",
        "type": "debug",
        "z": "20a22429.5f7e9c",
        "name": "Cyber-attack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 140,
        "wires": []
    },
    {
        "id": "fcb30ec.d7332f",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "6",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "677f2da.426fdd4"
            ]
        ]
    },
    {
        "id": "7616a5e0.41c3ec",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "Init_params",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "account",
                "v": "0x9c8e8c7847e2268482781ae3ed767d6984d63411",
                "vt": "str"
            },
            {
                "p": "key",
                "v": "c2dd6b39ade1ed7abc1a57a6e6e3cb2e2d758f6e7a0f2d711573985f25dced98",
                "vt": "str"
            },
            {
                "p": "contractaddress",
                "v": "0xbBEa55C458C334908966aeEd1Dc2Bb930187Cc0b",
                "vt": "str"
            },
            {
                "p": "jsonRPC",
                "v": "http://192.168.2.107:8545",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "ab9e684a.b8c2d8"
            ]
        ]
    },
    {
        "id": "943202be.6461b",
        "type": "debug",
        "z": "20a22429.5f7e9c",
        "name": "Transactions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "b8cb54ab.6bda58",
        "type": "function",
        "z": "20a22429.5f7e9c",
        "name": "hex to big_endian float32",
        "func": "raw = msg.payload[0].toString(16) + msg.payload[1].toString(16);\nenergyReadingkWh = Buffer.from(raw + \"0000\",'hex').readFloatBE(0);\nid = '1';\ntime = (new Date().getTime()).toString();\nvalue = energyReadingkWh.toString();\nif (isNaN(energyReadingkWh)) {return null;}\nmsg.payload = id + \" \" + time + \" \" + value + \" \" + global.get(\"key\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "3b48ed9c.f2c6a2"
            ]
        ]
    },
    {
        "id": "3b48ed9c.f2c6a2",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": "node /home/iot-nexcom/crypto.js",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Encrypty",
        "x": 660,
        "y": 340,
        "wires": [
            [
                "1fef3901.8a4e47"
            ],
            [],
            []
        ]
    },
    {
        "id": "617bd325.6c031c",
        "type": "functionx",
        "z": "20a22429.5f7e9c",
        "name": "Send Transaction",
        "func": "var Web3 = require(\"web3\")       // install latest   version\nconst web3 = new Web3(new Web3.providers.HttpProvider(global.get(\"jsonRPC\")));\n\nABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"add_acc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"added\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"new_Reco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rm\",\"type\":\"address\"}],\"name\":\"remove_acc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Fac_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reco\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_of_reco\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nbytecode = \"\"\n\nconst account = global.get(\"account\"); \n\n// Unlock the coinbase account to make transactions out of it\nnode.warn(\"Unlocking coinbase account\");\nvar password = \"123456\";\ntry {\n  web3.eth.personal.unlockAccount(account, password);\n} catch(e) {\n  node.warn(e);\n  return;\n}\n\nconst myContract = new web3.eth.Contract(ABI);\nlet options = {\n\targuments: [msg.data],\n\tdata: bytecode\n}\n\nvar gasEstimate = await myContract.deploy(options).estimateGas() + 1e5;\nawait myContract.deploy(options)\n.send({\n\tfrom: account,\n\tgas: web3.utils.toHex(gasEstimate),\n\tgasPrice: web3.utils.toHex(web3.utils.toWei('1','gwei'))\n}, function(error, transactionHash){ console.log(\"Transaction Hash: \",transactionHash) })\n.on('error', function(error){ console.log(error) })\n.on('receipt', function(receipt){\n   node.warn(\"Contract address: \" + receipt.contractAddress) // contains the new contract address\n})\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "32cabe4.7f0c842"
            ]
        ]
    },
    {
        "id": "1fef3901.8a4e47",
        "type": "functionx",
        "z": "20a22429.5f7e9c",
        "name": "Send transaction",
        "func": "const Web3 = require('web3');\nconst Tran = require('ethereumjs-tx').Transaction\nconst Common = require('ethereumjs-common').default\n\nconst my_private = Common.forCustomChain('mainnet', {\n\t\tname: 'My_private',\n\t\tnetworkId: 1,\n\t\tchainId: 2020,\n\t},\n\t'petersburg'\n);\n\nconst web3 = new Web3(Web3.currentProvider || global.get(\"jsonRPC\"));\n\nconst ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"add_acc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"added\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"new_Reco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rm\",\"type\":\"address\"}],\"name\":\"remove_acc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Fac_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reco\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_of_reco\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n\nlet account = global.get(\"account\");\n\nconst contractaddress = global.get(\"contractaddress\");\n\nconst myContract = new web3.eth.Contract(ABI, contractaddress);\nraw = msg.payload.split(\" \")\nlet dataTx = myContract.methods.new_Reco(raw[0], raw[1], raw[2]).encodeABI();\n\nawait web3.eth.getTransactionCount(account, 'pending', (err, txCount) => {\n    const rawTx = {\n\t\t\tto: contractaddress,\n\t\t\tfrom: account,\n\t\t\tnonce: web3.utils.toHex(txCount),\n\t\t\tdata: dataTx,\n\t\t\tgasLimit: web3.utils.toHex(10e5),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('1','gwei'))\n\t};\n\tconst tx1 = new Tran(rawTx, {common: my_private});\n\tconst key = global.get(\"key\");\t\t\t// Private Key\n\ttx1.sign(Buffer.from(key, 'hex'));\n\tconst serial = tx1.serialize();\n\tconst raw = '0x' + serial.toString('hex');\n\tweb3.eth.sendSignedTransaction(raw, (err, txHash) => {\n\t\tif(err)\t{\n\t\t\tnode.warn(err);\n\t\t}\n\t\tnode.warn(\"Transaction Hash: \" + txHash);\n\t});\n});\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 320,
        "wires": [
            [
                "943202be.6461b"
            ]
        ]
    },
    {
        "id": "b719c1f0.9b4ae",
        "type": "modbusSerial in",
        "z": "20a22429.5f7e9c",
        "port": "ab01fb5e.d3fd18",
        "slaves": "1",
        "start": "256",
        "count": 1,
        "dtype": "input",
        "period": "3",
        "topic": "",
        "name": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "b8cb54ab.6bda58",
                "7f0fde6.8da152"
            ]
        ]
    },
    {
        "id": "ab9e684a.b8c2d8",
        "type": "function",
        "z": "20a22429.5f7e9c",
        "name": "Declear Global Variable",
        "func": "global.set(\"account\", msg.account);\nglobal.set(\"key\", msg.key);\nglobal.set(\"contractaddress\", msg.contractaddress);\nglobal.set(\"jsonRPC\", msg.jsonRPC);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3ceca6b9.d8389a",
        "type": "iot-datasource",
        "z": "20a22429.5f7e9c",
        "name": "SM0",
        "tstampField": "tstamp",
        "dataField": "data",
        "disableDiscover": false,
        "cloudReady": false,
        "cloudDeploy": false,
        "DeviceId": "",
        "protocol": "amqp",
        "qos": "1",
        "retain": false,
        "topic": "",
        "broker": "",
        "mode": "",
        "x": 650,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7f0fde6.8da152",
        "type": "function",
        "z": "20a22429.5f7e9c",
        "name": "hex to big_endian float32",
        "func": "raw = msg.payload[0].toString(16) + msg.payload[1].toString(16);\nenergyReadingkWh = Buffer.from(raw + \"0000\",'hex').readFloatBE(0);\n\nif (context.i === undefined) context.i=0;\nmsg.payload = {\n    tstamp: new Date().getTime(),\n    data: [\n        { x: context.i,\n        y:  energyReadingkWh}\n    ]\n};\ncontext.i++;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "3ceca6b9.d8389a"
            ]
        ]
    },
    {
        "id": "e44540db.8ec0e",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": " rm /home/iot-nexcom/CIB/datasets/our_kdd_99/flag.txt &&  echo 1 >  /home/iot-nexcom/CIB/datasets/our_kdd_99/flag.txt",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "add flag",
        "x": 540,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5c5288ec.c3d4a8",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": "python3 /home/iot-nexcom/CIB/detector.py",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Detector",
        "x": 340,
        "y": 560,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d21ec66b.613f88",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "5c5288ec.c3d4a8"
            ]
        ]
    },
    {
        "id": "9179e50.538b518",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "a351c118.61d37"
            ]
        ]
    },
    {
        "id": "a351c118.61d37",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": "pkill -9 -f python3",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Shutdown Cyber-attack detector",
        "x": 410,
        "y": 760,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "48ea27e9.1f4ea8",
        "type": "inject",
        "z": "20a22429.5f7e9c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "7088aaf6.af61c4"
            ]
        ]
    },
    {
        "id": "7088aaf6.af61c4",
        "type": "exec",
        "z": "20a22429.5f7e9c",
        "command": "chmod -R 777  /home/iot-nexcom/CIB/datasets/our_kdd_99/data_raw.csv",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "chmod dataset",
        "x": 360,
        "y": 840,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f91b70f6.86f12",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Local",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "Cyberattack",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ab01fb5e.d3fd18",
        "type": "modbusSerialConfig",
        "z": 0,
        "port": "/dev/ttyUSB0",
        "baud": "9600",
        "data": "8",
        "parity": "none",
        "stop": "1",
        "name": "USB0"
    }
]